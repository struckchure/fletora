name: Publish to PyPI

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensures we have full history for versioning

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install the project dependencies
        run: uv sync --all-extras --dev

      - name: Update version number
        run: uvx --from=toml-cli toml set --toml-path=pyproject.toml project.version ${{ github.ref_name }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push version update
        env:
          DEFAULT_BRANCH: $(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
        run: |
          git add pyproject.toml
          git commit -m "build(pyproject.toml): bumps version to ${{ github.ref_name }}"
          git push origin HEAD:$DEFAULT_BRANCH

      - name: Build Package
        run: uv build --package fletora

      - name: Publish to PyPI
        run: uv publish --username=${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }}

  release:
    runs-on: ubuntu-latest
    needs: [deploy]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.1.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: true
          makeLatest: true
          name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}
